@model MuzON.Web.Models.ArtistViewModel
@{
    /**/
    Layout = null;
}

@{
    if (ViewBag.Action == "create")
    {
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Add Artist</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                </div>
                @using (Ajax.BeginForm("Create", "Artists", null,
    new AjaxOptions
    {
        HttpMethod = "Post",
        OnSuccess = "CreateArtistSuccess"
    },
    new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="modal-body">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.BirthDate, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @class = "form-control date-picker", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="editor-field">
                                        <input class="form-control" type="file" id="uploadImage" name="uploadImage" accept="image/x-png,image/gif,image/jpeg" />
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Country", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("CountryId", null, "Select country", htmlAttributes: new { @class = "form-control", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SelectedBands, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.ListBoxFor(model => model.SelectedBands, (IEnumerable<SelectListItem>)ViewBag.Bands, htmlAttributes: new { @class = "form-control", multiple = "multiple" })
                                    @Html.ValidationMessageFor(model => model.SelectedBands, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <div class="form-group">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                <input type="submit" id="addAndEdit" class="btn btn-primary" value="Create" />
                            </div>
                        </div>
                    </div>
                }
            </div>

        </div>
        @section scripts{
            <script>
                $(document).ready(function () {
                    $("#BirthDate").datepicker();
                });
            </script>
        }
    }


    else
    { <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Edit Artist</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                </div>
                @using (Ajax.BeginForm("Edit", "Artists", null,
                new AjaxOptions
                {
                    HttpMethod = "Post",
                    OnSuccess = "UpdateArtistSuccess"
                },
                new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
                {
                    <input type="hidden" value="@ViewBag.Action" id="action" />
                    @Html.AntiForgeryToken()
                    <div class="modal-body">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.BirthDate, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @class = "form-control date-picker", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="editor-field">
                                        <img id="imageSize" src="data:image/jpeg;base64,@Model.Image" />
                                        <input type="hidden" name="image" value="@Model.Image" />
                                        <input class="form-control" type="file" id="uploadImage" name="uploadImage" accept="image/x-png,image/gif,image/jpeg" />
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Country", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("CountryId", null, "Select country", htmlAttributes: new { @class = "form-control", @id = "countryDropList", @required = "required" })
                                    @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SelectedBands, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.ListBoxFor(model => model.SelectedBands, (IEnumerable<SelectListItem>)ViewBag.Bands, htmlAttributes: new { @class = "form-control", @id = "bands", multiple = "multiple" })
                                    @Html.ValidationMessageFor(model => model.SelectedBands, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                        <div class="modal-footer">
                            <div class="form-group">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                <input type="submit" class="btn btn-primary" value="Save" />
                            </div>
                        </div>
                    </div>
                }

            </div>

        </div>
        @section scripts{
            <script>
                $(document).ready(function () {
                    $("#BirthDate").datepicker();
                    $('select').niceSelect('update');
                });
            </script>
        }
    }

}

